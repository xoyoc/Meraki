# Generated by Django 5.2.4 on 2025-08-05 04:26

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('applicants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('duration_hours', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Duración (horas)')),
                ('instructor', models.CharField(max_length=200, verbose_name='Instructor')),
                ('category', models.CharField(choices=[('tecnologia', 'Tecnología'), ('marketing', 'Marketing'), ('negocios', 'Negocios'), ('diseno', 'Diseño'), ('desarrollo_personal', 'Desarrollo Personal'), ('idiomas', 'Idiomas'), ('salud', 'Salud y Bienestar'), ('finanzas', 'Finanzas')], max_length=50, verbose_name='Categoría')),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Principiante'), ('intermediate', 'Intermedio'), ('advanced', 'Avanzado')], default='beginner', max_length=20, verbose_name='Nivel de Dificultad')),
                ('prerequisites', models.TextField(blank=True, null=True, verbose_name='Requisitos Previos')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Destacado')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(verbose_name='Pregunta')),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Opción Múltiple'), ('true_false', 'Verdadero/Falso'), ('short_answer', 'Respuesta Corta')], default='multiple_choice', max_length=20, verbose_name='Tipo de Pregunta')),
                ('points', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Puntos')),
                ('order', models.PositiveIntegerField(default=1, verbose_name='Orden')),
                ('explanation', models.TextField(blank=True, help_text='Explicación de la respuesta correcta', verbose_name='Explicación')),
            ],
            options={
                'verbose_name': 'Pregunta',
                'verbose_name_plural': 'Preguntas',
                'ordering': ['quiz', 'order'],
            },
        ),
        migrations.CreateModel(
            name='CourseResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('resource_type', models.CharField(choices=[('pdf', 'Documento PDF'), ('video', 'Video'), ('link', 'Enlace Externo'), ('document', 'Documento'), ('image', 'Imagen')], max_length=20, verbose_name='Tipo de Recurso')),
                ('file', models.FileField(blank=True, null=True, upload_to='course_resources/', verbose_name='Archivo')),
                ('url', models.URLField(blank=True, verbose_name='URL')),
                ('is_downloadable', models.BooleanField(default=True, verbose_name='Descargable')),
                ('order', models.PositiveIntegerField(default=1, verbose_name='Orden')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course', verbose_name='Curso')),
            ],
            options={
                'verbose_name': 'Recurso del Curso',
                'verbose_name_plural': 'Recursos del Curso',
                'ordering': ['course', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('enrolled', 'Inscrito'), ('completed', 'Completado'), ('cancelled', 'Cancelado')], default='enrolled', max_length=20, verbose_name='Estado')),
                ('enrolled_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Inscripción')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Completación')),
                ('progress_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Porcentaje de Progreso')),
                ('last_accessed', models.DateTimeField(blank=True, null=True, verbose_name='Último Acceso')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applicants.applicantprofile', verbose_name='Estudiante')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course', verbose_name='Curso')),
            ],
            options={
                'verbose_name': 'Inscripción',
                'verbose_name_plural': 'Inscripciones',
                'ordering': ['-enrolled_at'],
                'unique_together': {('course', 'applicant')},
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_id', models.CharField(max_length=50, unique=True, verbose_name='ID del Certificado')),
                ('pdf_file', models.FileField(upload_to='certificates/', verbose_name='Archivo PDF')),
                ('issued_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Emisión')),
                ('is_public', models.BooleanField(default=True, help_text='Si el certificado puede ser verificado públicamente', verbose_name='Público')),
                ('verification_url', models.URLField(blank=True, verbose_name='URL de Verificación')),
                ('enrollment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='courses.enrollment', verbose_name='Inscripción')),
            ],
            options={
                'verbose_name': 'Certificado',
                'verbose_name_plural': 'Certificados',
                'ordering': ['-issued_at'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('content', models.TextField(verbose_name='Contenido')),
                ('lesson_type', models.CharField(choices=[('video', 'Video'), ('text', 'Texto'), ('quiz', 'Quiz'), ('assignment', 'Tarea'), ('resource', 'Recurso')], default='text', max_length=20, verbose_name='Tipo de Lección')),
                ('duration', models.IntegerField(help_text='Duración en minutos', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Duración (minutos)')),
                ('order', models.PositiveIntegerField(default=1, verbose_name='Orden')),
                ('video_url', models.URLField(blank=True, null=True, verbose_name='URL del Video')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course', verbose_name='Curso')),
            ],
            options={
                'verbose_name': 'Lección',
                'verbose_name_plural': 'Lecciones',
                'ordering': ['course', 'order'],
                'unique_together': {('course', 'order')},
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.CharField(max_length=500, verbose_name='Respuesta')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Es Correcta')),
                ('order', models.PositiveIntegerField(default=1, verbose_name='Orden')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.question', verbose_name='Pregunta')),
            ],
            options={
                'verbose_name': 'Respuesta',
                'verbose_name_plural': 'Respuestas',
                'ordering': ['question', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('passing_score', models.IntegerField(default=70, help_text='Puntuación mínima para aprobar (%)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Puntuación Mínima')),
                ('time_limit', models.IntegerField(blank=True, help_text='Tiempo límite en minutos (opcional)', null=True, verbose_name='Tiempo Límite (minutos)')),
                ('max_attempts', models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Intentos Máximos')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course', verbose_name='Curso')),
            ],
            options={
                'verbose_name': 'Quiz',
                'verbose_name_plural': 'Quizzes',
                'ordering': ['course', 'title'],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.quiz', verbose_name='Quiz'),
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Puntuación')),
                ('is_passed', models.BooleanField(default=False, verbose_name='Aprobado')),
                ('attempt_number', models.PositiveIntegerField(verbose_name='Número de Intento')),
                ('started_at', models.DateTimeField(verbose_name='Iniciado en')),
                ('attempted_at', models.DateTimeField(verbose_name='Completado en')),
                ('time_taken', models.IntegerField(help_text='Tiempo tomado en segundos', verbose_name='Tiempo Utilizado')),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.enrollment', verbose_name='Inscripción')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.quiz', verbose_name='Quiz')),
            ],
            options={
                'verbose_name': 'Intento de Quiz',
                'verbose_name_plural': 'Intentos de Quiz',
                'ordering': ['-attempted_at'],
                'unique_together': {('enrollment', 'quiz', 'attempt_number')},
            },
        ),
        migrations.CreateModel(
            name='LessonProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Completada')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Completación')),
                ('time_spent', models.IntegerField(default=0, help_text='Tiempo gastado en minutos', verbose_name='Tiempo Invertido')),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.enrollment', verbose_name='Inscripción')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.lesson', verbose_name='Lección')),
            ],
            options={
                'verbose_name': 'Progreso de Lección',
                'verbose_name_plural': 'Progreso de Lecciones',
                'unique_together': {('enrollment', 'lesson')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='question',
            unique_together={('quiz', 'order')},
        ),
        migrations.CreateModel(
            name='QuizResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_response', models.TextField(blank=True, help_text='Para preguntas de respuesta corta', verbose_name='Respuesta de Texto')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Es Correcta')),
                ('points_earned', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Puntos Obtenidos')),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.quizattempt', verbose_name='Intento')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.question', verbose_name='Pregunta')),
                ('selected_answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.answer', verbose_name='Respuesta Seleccionada')),
            ],
            options={
                'verbose_name': 'Respuesta de Quiz',
                'verbose_name_plural': 'Respuestas de Quiz',
                'unique_together': {('attempt', 'question')},
            },
        ),
    ]
